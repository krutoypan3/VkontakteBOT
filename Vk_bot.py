import json
import socket
import time
import requests
import urllib3
from vk_api.bot_longpoll import VkBotEventType

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
from db_module import con, sql_insert_anime_base
import func_module
from func_module import longpoll


def error(ErrorF):
    global oshibka
    oshibka += 1
    print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ " + '‚Ññ' + str(oshibka) + ' ' + ErrorF)
    if ErrorF == " - –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–∫":
        time.sleep(1.0)
    main()


if __name__ == '__main__':
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã
    try:
        # –ü–µ—Ä–≤–∏—á–Ω—ã–π –∑–∞–ø—É—Å–∫
        print("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç...")
        games = {'1': func_module.game_ugadai_chislo,
                 '2': func_module.game_kto_kruche,
                 '3': func_module.game_brosok_kubika,
                 '4': func_module.game_mat_victorina,
                 '5': func_module.game_casino}
        clan = {'—Å–æ–∑–¥–∞—Ç—å': func_module.clan_create,
                '—Ä–∞—Å–ø–∞–¥': func_module.clan_disvorse,
                '–∫–∏–∫': func_module.clan_kick,
                '–ø–æ–∫–∏–Ω—É—Ç—å': func_module.clan_leave,
                '–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å': func_module.clan_invite,
                '–±–∞–ª–∞–Ω—Å': func_module.clan_balance,
                '–ø–æ–≤—ã—Å–∏—Ç—å': func_module.clan_up_down,
                '–ø–æ–Ω–∏–∑–∏—Ç—å': func_module.clan_up_down,
                '–∏–Ω—Ñ–æ': func_module.clan_info}
        clan2 = {'—Ç–æ–ø': func_module.clan_balance_top,
                 '–ø–æ–ø–æ–ª–Ω–∏—Ç—å': func_module.clan_add_balance,
                 '–≤—ã–≤–µ—Å—Ç–∏': func_module.clan_rem_balance}
        content_ft = {'–∞—Ä—Ç': func_module.photo_arts,
                      '—é—Ä–∏+': func_module.photo_ur18,
                      '—Å—Ç–∏–∫–µ—Ä': func_module.photo_stik,
                      '—Ö–µ–Ω—Ç–∞–π': func_module.photo_hent,
                      '–±–¥—Å–º': func_module.photo_bdsm,
                      '–∞—Ö–µ–≥–∞–æ': func_module.photo_aheg,
                      '–ª–æ–ª–∏': func_module.photo_loli,
                      '–Ω–µ–∫–æ': func_module.photo_neko,
                      '–º–∞–Ω–≥–∞ –∞—Ä—Ç': func_module.photo_mart}
        content_vd = {'coub': func_module.video_coub}

        def main():
            try:
                for event in longpoll.listen():  # –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –ª–∏—Å—Ç–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏–π
                    if event.type == VkBotEventType.MESSAGE_NEW:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∏—Ö–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è
                        if event.object.from_id > 0:
                            def messege_chek(peer_id, from_id, text):
                                slova = event.obj.text.lower().split()  # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å–ª–æ–≤–∞
                                func_module.thread_start(func_module.add_balans, from_id, '2')
                                # –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
                                # –ò–≥—Ä—ã --------------------------------------------------------------------------------
                                if len(slova) > 5:
                                    if slova[0] + ' ' + slova[1] + ' ' + slova[2] == '—Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç' and \
                                            slova[4] == '–¥–æ':
                                        func_module.thread_start(func_module.random_ot_do_int_chislo, peer_id,
                                                                 slova[3], slova[5])
                                if len(slova) > 2:
                                    if slova[0] == 'DB' and slova[1] == 'insert':
                                        anime_name = ''
                                        for i in range(len(slova) - 4):
                                            if i > 1:
                                                anime_name += slova[i] + ' '
                                        entities = str(anime_name), str(slova[-4]), str(slova[-3]), \
                                                   str(slova[-2]), str(slova[-1])
                                        sql_insert_anime_base(con, entities)
                                        func_module.send_msg_new(peer_id, "–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
                                if len(slova) > 1:
                                    if slova[0] == 'DB' and slova[1] == 'help':
                                        func_module.send_msg_new(peer_id,
                                                                 "–î–ª—è –≤—Å—Ç–∞–≤–∫–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É –Ω–∞–ø–∏—à–∏—Ç–µ:"
                                                                 "\nDB insert '–ù–∞–∑–≤–∞–Ω–∏–µ' '–∂–∞–Ω—Ä1' '–∂–∞–Ω—Ä2' '–∂–∞–Ω—Ä3' "
                                                                 "'–∫–æ–ª-–≤–æ —Å–µ—Ä–∏–π'\n\n–ù–∞–ø—Ä–∏–º–µ—Ä:\nDB insert –≠—Ç–æ—Ç "
                                                                 "–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –º–∏—Ä –ö–æ–º–µ–¥–∏—è –ò—Å–µ–∫–∞–π –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è 24")
                                    # good \/
                                    if slova[0] == '–∏–≥—Ä–∞':
                                        if slova[1] in games:
                                            if not func_module.prov_zap_game(peer_id):
                                                func_module.thread_start(games[slova[1]], peer_id, from_id)
                                            else:
                                                func_module.send_msg_new(peer_id, '&#128377;–î—Ä—É–≥–∞—è –∏–≥—Ä–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞!')
                                    if slova[0] == '–∫–ª–∞–Ω':
                                        if slova[1] in clan:
                                            func_module.thread_start(clan[slova[1]], peer_id, from_id, slova)
                                        if len(slova) > 2:
                                            if slova[2] in clan2:
                                                if len(slova) > 2:
                                                    if slova[0] + ' ' + slova[1] == '–∫–ª–∞–Ω –±–∞–ª–∞–Ω—Å':
                                                        func_module.thread_start(clan2[slova[2]], peer_id,
                                                                                 from_id, slova)

                                    # good /\
                                # –¢–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã --------------------------------------------------------------------
                                if len(slova) > 0:
                                    if text == "–∫–ª–∞–Ω" or text == "–∫–ª–∞–Ω—ã" or text == "–∫–ª–∞–Ω –ø–æ–º–æ—â—å" or \
                                            text == "–∫–ª–∞–Ω—ã –ø–æ–º–æ—â—å":
                                        func_module.send_msg_new(peer_id, '–ö–ª–∞–Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'
                                                                          '\n'
                                                                          '‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n'
                                                                          '&#9209;–ö–ª–∞–Ω —Ä–∞—Å–ø–∞–¥\n'
                                                                          '‚≠ê‚≠ê‚≠ê‚≠ê\n'
                                                                          '&#128183;–ö–ª–∞–Ω –±–∞–ª–∞–Ω—Å –≤—ã–≤–µ—Å—Ç–∏ "—Å—É–º–º–∞"\n'
                                                                          '‚≠ê‚≠ê‚≠ê\n'
                                                                          'üîº–ö–ª–∞–Ω –ø–æ–≤—ã—Å–∏—Ç—å "–∫–æ–≥–æ"\n'
                                                                          'üîΩ–ö–ª–∞–Ω –ø–æ–Ω–∏–∑–∏—Ç—å "–∫–æ–≥–æ"\n'
                                                                          '‚≠ê‚≠ê\n'
                                                                          '&#9654;–ö–ª–∞–Ω –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å "–∫–æ–≥–æ"\n'
                                                                          '‚≠ê\n'
                                                                          '&#8505;–ö–ª–∞–Ω –∏–Ω—Ñ–æ\n'
                                                                          '&#9664;–ö–ª–∞–Ω –ø–æ–∫–∏–Ω—É—Ç—å\n'
                                                                          '&#9664;–ö–ª–∞–Ω –∫–∏–∫ "–∫–æ–≥–æ"\n'
                                                                          '&#127975;–ö–ª–∞–Ω –±–∞–ª–∞–Ω—Å\n'
                                                                          '&#128200;–ö–ª–∞–Ω –±–∞–ª–∞–Ω—Å —Ç–æ–ø\n'
                                                                          '&#128182;–ö–ª–∞–Ω –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–∏—Ç—å "—Å—É–º–º–∞"\n\n'
                                                                          '&#127381;–ö–ª–∞–Ω —Å–æ–∑–¥–∞—Ç—å "–Ω–∞–∑–≤–∞–Ω–∏–µ_—Å–ª–∏—Ç–Ω–æ" |'
                                                                          '&#128184;5000 –º–æ–Ω–µ—Ç\n')

                                    elif text == "–±—Ä–∞—Ç–∏–∫ –ø—Ä–∏–≤–µ—Ç":
                                        func_module.send_msg_new(peer_id, "&#128075; –ü—Ä–∏–≤–µ—Ç–∏–∫")
                                    elif text == "–î–æ–Ω–∞—Ç" or text == "–ö—É–ø–∏—Ç—å –±—Ä–æ –∫–æ–∏–Ω—ã" or \
                                            text == "–¥–æ–Ω–∞—Ç" or text == "–∫—É–ø–∏—Ç—å –±—Ä–æ –∫–æ–∏–Ω—ã":
                                        func_module.send_msg_new(peer_id,
                                                                 '–î–ª—è –ø–æ–∫—É–ø–∫–∏ –±—Ä–æ –∫–æ–∏–Ω–æ–≤ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏ '
                                                                 '–æ–ø–ª–∞—Ç–∏—Ç–µ '
                                                                 '–Ω—É–∂–Ω–æ–µ'
                                                                 ' –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ\n1 —Ä—É–±–ª—å = 2000 –±—Ä–æ-–∫–æ–∏–Ω–æ–≤\n'
                                                                 '–í–∞—à –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫\n'
                                                                 '–í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à—É '
                                                                 '—Å—Ç—Ä–∞–Ω–∏—Ü—É\n'
                                                                 'https://yasobe.ru/na/br_koins')
                                    elif text == "Admin-reboot":
                                        func_module.send_msg_new(peer_id,
                                                                 "–ë–æ—Ç —É—Ö–æ–¥–∏—Ç –Ω–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É –∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω "
                                                                 "—á–µ—Ä–µ–∑ 10-15 —Å–µ–∫—É–Ω–¥")
                                        func_module.zapros_ft_vd()
                                    elif text == "–ø–æ—Å–æ–≤–µ—Ç—É–π –∞–Ω–∏–º–µ":
                                        func_module.thread_start(func_module.anime_sovet, peer_id)
                                    elif text == "–ø–æ–∫–∞" or text == "—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏" or \
                                            text == "—Å–ø–æ–∫–∏" or text == "bb":
                                        func_module.send_msg_new(peer_id, "&#128546; –ü—Ä–æ—â–∞–π")
                                    elif text == "–≤—Ä–µ–º—è":
                                        func_module.send_msg_new(peer_id, str(time.ctime()))
                                    elif text == "–∫–æ–º–∞–Ω–¥—ã" or text == "–±—Ä–∞—Ç–∏–∫":
                                        func_module.send_msg_new(peer_id,
                                                                 '‚öôÔ∏è –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ ' +
                                                                 'vk.com/@bratikbot-commands')
                                    elif text == "–∏–≥—Ä—ã":
                                        func_module.klava_game(peer_id)
                                    elif text == "–±—Ä–æ –Ω–∞–≥—Ä–∞–¥–∞" or \
                                            text == "–±—Ä–æ —à–µ–∫–µ–ª—å":
                                        func_module.thread_start(func_module.add_balans_every_day, peer_id,
                                                                 from_id)  # DB
                                    elif text == "–±—Ä–æ –±–∞–ª–∞–Ω—Å":
                                        func_module.thread_start(func_module.balans_status, peer_id, from_id)
                                    elif text == "–±—Ä–æ –±–∞–ª–∞–Ω—Å —Ç–æ–ø":
                                        func_module.thread_start(func_module.balans_top, peer_id)  # DB
                                    elif text == "–æ–Ω–ª–∞–π–Ω" or text == "–∫—Ç–æ —Ç—É—Ç":
                                        func_module.send_msg_new(peer_id, func_module.who_online(peer_id))
                                    elif text == "–∏–Ω—Ñ–æ":
                                        func_module.send_msg_new(peer_id,
                                                                 "–ú–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ - –û–≥–∞–Ω–µ—Å—è–Ω –ê—Ä—Ç–µ–º.\n–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ "
                                                                 "—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫ –Ω–µ–º—É: vk.com/aom13")
                                    elif text == "—è –∞–¥–º–∏–Ω":
                                        if func_module.adm_prov(peer_id, from_id):
                                            func_module.send_msg_new(peer_id, '–î–∞, —Ç—ã –∞–¥–º–∏–Ω')
                                        else:
                                            func_module.send_msg_new(peer_id, '–£–≤—ã –Ω–æ –Ω–µ—Ç')
                                    # –û—Ç–≤–µ—Ç—ã —Å–æ –≤–ª–æ–∂–µ–Ω–∏—è–º–∏ ------------------------------------------------------------
                                    elif text in content_ft:
                                        func_module.thread_start(func_module.send_content, peer_id, content_ft[text],
                                                                 text, True)
                                    elif text in content_vd:
                                        func_module.thread_start(func_module.send_content, peer_id, content_vd[text],
                                                                 text, False)

                                    elif text == "nain":
                                        idphoto = 457242784
                                        func_module.provzapret_ft(peer_id, 'nain', str(idphoto))
                                        func_module.main_keyboard_arts(peer_id)
                                    elif len(slova) > 1:
                                        if slova[0] == '–∑–∞–ø—Ä–µ—Ç':
                                            func_module.adm_prov_and_zapret(peer_id, from_id, slova[1])
                                        elif slova[1] == '—É—á–∞—Å—Ç–≤—É—é':
                                            if not func_module.prov_zap_game(peer_id):
                                                func_module.send_msg_new(peer_id, '–ò–≥—Ä–∞ —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å')
                                        elif slova[0] + ' ' + slova[1] == '–±—Ä–∞–∫ —Å—Ç–∞—Ç—É—Å':
                                            func_module.thread_start(func_module.marry_status, peer_id, from_id)
                                        elif slova[0] == "–±—Ä–∞–∫":
                                            func_module.thread_start(func_module.marry_create, peer_id, from_id,
                                                                     slova[1])
                                        elif slova[0] == "–ø–µ—Ä–µ–≤–µ—Å—Ç–∏":
                                            func_module.thread_start(func_module.money_send, peer_id, from_id,
                                                                     slova[1], slova[2])
                                    elif text == "—Ä–∞–∑–≤–æ–¥":
                                        func_module.thread_start(func_module.marry_disvorse, peer_id, from_id)
                                    # –û—Ç–ª–∞–¥–∫–∞ -------------------------------------------------------------------------
                                    elif text == 'dump':
                                        with open('dump.json', 'w') as dump:
                                            func_module.send_msg_new(peer_id, peer_id)
                                            auth = requests.get('https://oauth.vk.com/authorize',
                                                                params={
                                                                    'client_id': '7522555',
                                                                    'redirect_uri': 'https://oauth.vk.com/blank.html',
                                                                    'response_type': 'token'

                                                                }
                                                                )
                                            print(auth.text)
                                            json.dump(auth.text, dump)
                                            func_module.send_msg_new(peer_id, 'dumped')
                                    elif text == "–Ω–∞—á–∞—Ç—å" or text == "–≥–ª–∞–≤–Ω–∞—è":
                                        if func_module.lich_or_beseda:
                                            func_module.main_keyboard_1(peer_id)
                                    elif text == "–∞—Ä—Ç—ã":
                                        if func_module.lich_or_beseda:
                                            func_module.main_keyboard_arts(peer_id)
                                    elif text == "18+":
                                        if func_module.lich_or_beseda:
                                            func_module.main_keyboard_hent(peer_id)
                                    elif text == "–≤–∏–¥–µ–æ":
                                        if func_module.lich_or_beseda:
                                            func_module.main_keyboard_video(peer_id)
                                    elif text == "–∞–Ω–∏–º–µ(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)" or text == "amv(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)":
                                        func_module.send_msg_new(peer_id, "–ù–∞–ø–∏—Å–∞–Ω–æ –∂–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ))")
                                        func_module.main_keyboard_1(peer_id)
                                    else:
                                        func_module.main_keyboard_1(peer_id)

                            func_module.thread_start(messege_chek, event.object.peer_id, event.object.from_id,
                                                     event.obj.text.lower())
            except (requests.exceptions.ConnectionError, urllib3.exceptions.MaxRetryError,
                    urllib3.exceptions.NewConnectionError, socket.gaierror):
                error(" - –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–∫")

            finally:
                error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–Ω–µ –æ—à–∏–±–∫–∞, –Ω–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –Ω–∞–≤–µ—Ä–Ω–æ–µ')


        main()
    except (requests.exceptions.ConnectionError, urllib3.exceptions.MaxRetryError,
            urllib3.exceptions.NewConnectionError, socket.gaierror):
        error(" - –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–∫")

    finally:
        error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–Ω–µ –æ—à–∏–±–∫–∞, –Ω–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –Ω–∞–≤–µ—Ä–Ω–æ–µ')
